@page "/gender/update/{GenderId:int}"

@inject IBaseService baseService
@inject IShowMessage showMessage
@inject NavigationManager navigationManager

<HeaderBreadcrumb Parent="Home" Section="Update gender" />

@if (Gender is null)
{
    <text>Loading...</text>
}
else
{
    <GenderForm OnValidSubmit="EditGender" Gender="Gender" />
}

@code {
    [Parameter] public int GenderId { get; set; }
    private GenderViewModel Gender;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await baseService.GetAsync<GenderViewModel>($"http://localhost:5000/api/v1/genders/{GenderId}");

        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("gender");
            }
            else
            {
                await showMessage.ShowErrorMessage(await httpResponse.GetBody());
            }
        }
        else
        {
            Gender = httpResponse.Response;
        }
    }

    private async Task EditGender()
    {
        var httpResponse = await baseService.PutAsync("http://localhost:5000/api/v1/genders", Gender);
        if (httpResponse.Error)
        {
            await showMessage.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("gender");
        }
    }
}
