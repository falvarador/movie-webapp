@using System.IO
@using Blazor.FileReader

@inject IFileReaderService fileReaderService

<div class="col-6">
    <label>@Label</label>
    <div class="input-view-flat input-group">
        <input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg,.jpeg,.png" />
    </div>
</div>
<div class="col-6">
    @if (imagenBase64 != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="data:image/jpeg;base64, @imagenBase64" style="width: 400px;" />
            </div>
        </div>
    }
    @if (TempImage != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="@TempImage" style="width: 400px;" />
            </div>
        </div>
    }
</div>

@code {
    
    [Parameter] public string Label { get; set; } = "Imagen";
    [Parameter] public string TempImage { get; set; }
    [Parameter] public EventCallback<string> SelectedImage { get; set; }

    private string imagenBase64;
    ElementReference inputElement;

    async Task ImageFileSelected()
    {
        foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                var bytesImagen = new byte[memoryStream.Length];
                memoryStream.Read(bytesImagen, 0, (int)memoryStream.Length);
                imagenBase64 = Convert.ToBase64String(bytesImagen);
                await SelectedImage.InvokeAsync(imagenBase64);
                TempImage = null;
                StateHasChanged();
            }
        }
    }
}
